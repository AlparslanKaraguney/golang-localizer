// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_GB": &dictionary{index: en_GBIndex, data: en_GBData},
		"tr_TR": &dictionary{index: tr_TRIndex, data: tr_TRData},
	}
	fallback := language.MustParse("en-GB")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"System is running": 1,
	"Welcome!":          0,
}

var en_GBIndex = []uint32{ // 3 elements
	0x00000000, 0x00000009, 0x0000001b,
} // Size: 36 bytes

const en_GBData string = "\x02Welcome!\x02System is running"

var tr_TRIndex = []uint32{ // 3 elements
	0x00000000, 0x0000000e, 0x00000023,
} // Size: 36 bytes

const tr_TRData string = "\x02Hoşgeldiniz!\x02Sistem çalışıyor"

// Total table size 134 bytes (0KiB); checksum: 6484E265
